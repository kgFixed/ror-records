# This is a basic workflow to help you get started with Actions

name: get release dats

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Test only problematic versions
        run: |
          echo "üéØ TEST DES VERSIONS PROBL√âMATIQUES SEULEMENT"
          echo "============================================"
          
          problematic_versions="v1.56 v1.57 v1.58 v1.59 v1.60 v1.61 v1.62 v1.63 v1.64 v1.65"
          
          for v in $problematic_versions; do
            echo -n "üîç $v: "
            
            # V√©rifier d'abord si le dossier existe
            if [ ! -d "$v" ]; then
              echo "‚ùå DOSSIER LOCAL MANQUANT"
              continue
            fi
            
            # Requ√™te API
            response=$(curl -s "https://api.github.com/repos/ror-community/ror-updates/releases/tags/$v")
            
            # Debug de la r√©ponse
            if [ -z "$response" ]; then
              echo "‚ùå R√âPONSE VIDE"
            elif echo "$response" | grep -q "API rate limit"; then
              echo "‚ùå RATE LIMIT D√âPASS√â"
            elif echo "$response" | grep -q "Not Found"; then
              echo "‚ùå NOT FOUND"
            else
              date=$(echo "$response" | jq -r '.created_at // "NO_DATE"')
              if [ "$date" = "NO_DATE" ]; then
                echo "‚ùå CHAMP CREATED_AT MANQUANT"
                echo "   R√©ponse: $response"
              else
                echo "‚úÖ $date"
              fi
            fi
          done
