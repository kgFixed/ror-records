# This is a basic workflow to help you get started with Actions

name: get release dats

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Get dates with token and rate limit check
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "ðŸ”‘ AVEC TOKEN + VÃ‰RIFICATION RATE LIMIT"
          echo "======================================"
          
          # VÃ©rifier le rate limit AVEC token
          echo "ðŸ“Š Rate limit avec token:"
          curl -s -H "Authorization: token $GH_TOKEN" \
               https://api.github.com/rate_limit | jq '.resources.core'
          echo ""
          
          # RÃ©cupÃ©ration avec token
          for v in $(ls -d v* | sort -V); do
            echo -n "ðŸŽ¯ $v: "
            
            response=$(curl -s -H "Authorization: token $GH_TOKEN" \
                              "https://api.github.com/repos/ror-community/ror-updates/releases/tags/$v")
            
            date=$(echo "$response" | jq -r '.created_at // "NOT_FOUND"')
            echo "$date"
            
            # Petit dÃ©lai pour Ãªtre gentil avec l'API
            sleep 0.2
          done
