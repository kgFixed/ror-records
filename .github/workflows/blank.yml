# This is a basic workflow to help you get started with Actions

name: Convert ROR json to ttl

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "üìÅ Fichiers JSON par version avec dates:"
          echo ""
          
          for version in $(ls -d v* 2>/dev/null | sort -V); do
            echo "üéØ $version:"
            echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
            
            # R√©cup√©rer la date de cr√©ation du dossier
            if [ -d "$version" ]; then
              creation_date=$(stat -c %y "$version" | cut -d' ' -f1 2>/dev/null || echo "Date inconnue")
              echo "  üìÖ Cr√©ation: $creation_date"
            fi
            
            files=("$version"/*.json)
            total_files=${#files[@]}
            
            if [ $total_files -eq 0 ]; then
              echo "  ‚ùå Aucun fichier JSON"
            else
              echo "  üìä Total: $total_files fichiers"
              echo ""
              
              # Afficher seulement les 10 premiers fichiers
              for i in "${!files[@]}"; do
                if [ $i -lt 10 ]; then
                  filename=$(basename "${files[$i]}")
                  echo "  üìÑ $filename"
                fi
              done
              
              if [ $total_files -gt 10 ]; then
                echo "  ... et $(($total_files - 10)) autres fichiers"
              fi
            fi
            
            echo ""
            echo ""
          done
