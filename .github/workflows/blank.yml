# This is a basic workflow to help you get started with Actions

name: Convert ROR json to ttl

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Generate complete releases info JSON
        run: |
          echo "📁 Génération du JSON complet..."
          
          sudo apt-get update && sudo apt-get install -y jq
          
          echo '{}' > releases_info.json
          
          for version in $(ls -d v* 2>/dev/null | sort -V); do
            echo "🔹 $version"
            
            # Méthode ultra-simple
            release_date=$(curl -s "https://api.github.com/repos/ror-community/ror-updates/releases/tags/$version" | jq -r '.created_at')
            
            # Récupérer les IDs
            ror_ids=()
            for file in "$version"/*.json; do
              [ -f "$file" ] && ror_ids+=("$(basename "$file" .json)")
            done
            
            # Mise à jour JSON
            jq --arg v "$version" \
               --arg d "$release_date" \
               --argjson i "$(printf '%s\n' "${ror_ids[@]}" | jq -R . | jq -s .)" \
               '.[$v] = {created_at: $d, ror_ids: $i, count: ($i | length)}' \
               releases_info.json > temp.json && mv temp.json releases_info.json
          done
          
          echo "✅ Terminé!"
          cat releases_info.json
