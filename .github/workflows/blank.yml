# This is a basic workflow to help you get started with Actions

name: Convert ROR json to ttl

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "📁 Fichiers JSON par version avec dates des releases:"
          echo ""
          
          # Installer jq pour parser le JSON
          sudo apt-get update && sudo apt-get install -y jq
          
          for version in $(ls -d v* 2>/dev/null | sort -V); do
            echo "🎯 $version:"
            echo "────────────────────────────────────"
            
            # Utiliser l'API spécifique pour chaque release
            release_info=$(curl -s "https://api.github.com/repos/ror-community/ror-updates/releases/tags/$version")
            
            # Utiliser jq pour extraire la date de création
            release_date=$(echo "$release_info" | jq -r '.created_at' 2>/dev/null)
            
            if [ -n "$release_date" ] && [ "$release_date" != "null" ]; then
              formatted_date=$(echo "$release_date" | cut -d'T' -f1)
              echo "  📅 Date de création: $formatted_date"
            else
              echo "  📅 Date: Release non trouvée"
            fi
            
            files=("$version"/*.json)
            total_files=${#files[@]}
            
            if [ $total_files -eq 0 ]; then
              echo "  ❌ Aucun fichier JSON"
            else
              echo "  📊 Total: $total_files fichiers"
              echo ""
              
              for i in "${!files[@]}"; do
                if [ $i -lt 10 ]; then
                  filename=$(basename "${files[$i]}")
                  echo "  📄 $filename"
                fi
              done
              
              if [ $total_files -gt 10 ]; then
                echo "  ... et $(($total_files - 10)) autres fichiers"
              fi
            fi
            
            echo ""
            echo ""
          done
